(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{532:function(v,_,e){"use strict";e.r(_);var t=e(16),l=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"前端发展史"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端发展史"}},[v._v("#")]),v._v(" 前端发展史")]),v._v(" "),_("ol",[_("li",[v._v("原始社会： NeXT 计算及上最原始的Web浏览器，（页面不支持动态更改，且只有HTML,缺失校验，缺乏差异化渲染）")]),v._v(" "),_("li",[v._v("石器时代： 1994 PHP诞生，提供了数据嵌入HTML的能力,经典MVC模式")]),v._v(" "),_("li",[v._v("铁器时代： css规范+js诞生，96年微软异步传入的ActiveX和其他厂商推出XMLHttpRequest，改变前端页面获取后台信息必须刷新整个页面的局面")]),v._v(" "),_("li",[v._v("工业化时代： 很多C/S中实现的桌面软件转移到前端，前端逻辑越来越复杂，jquery力不从心。\n"),_("ul",[_("li",[v._v("频繁操作DOM严重影响性能")]),v._v(" "),_("li",[v._v("jquery操作强依赖标签选择器和dom树结构，一旦改变页面结构或选择器，牵一发动全身")]),v._v(" "),_("li",[v._v("插件无法有限隔离，容易冲突")]),v._v(" "),_("li",[v._v("jqeury最初为了"),_("code",[v._v("抹平浏览器诧异")]),v._v("，而ECMAScript不断进化，jquery优势越来越小")]),v._v(" "),_("li",[v._v("前端其他框架（Knockout,Backbone,Ember，React,Vue）涌现，网页从web Site逐渐转成web APP模式")]),v._v(" "),_("li",[v._v("React希望开发Native的速度能像web一样快=>react native（解决移动web性能和UI体验弱，但是开发成本低和跨平台等优势）")])])]),v._v(" "),_("li",[v._v("未来的方向-智能化")])]),v._v(" "),_("p",[v._v("前端生态系统")]),v._v(" "),_("ol",[_("li",[v._v("服务端： Node Deno")]),v._v(" "),_("li",[v._v("跨平台： React Native Weex Taro mpvue Electron")]),v._v(" "),_("li",[v._v("打包构建工具： webpack parcel rollup vite Esbuild")]),v._v(" "),_("li",[v._v("css预编译语言： scss less stylus")]),v._v(" "),_("li",[v._v("前端框架： Vue React Angular San")]),v._v(" "),_("li",[v._v("状态管理： Redux Vuex flux")]),v._v(" "),_("li",[v._v("请求库： axios fetch request")]),v._v(" "),_("li",[v._v("基础组件库： element-ui antd vant antDesign")]),v._v(" "),_("li",[v._v("可视化： echarts three cesium g2")]),v._v(" "),_("li",[v._v("测试： jest mocha karma")]),v._v(" "),_("li",[v._v("IDE： vscode sublime atom")]),v._v(" "),_("li",[v._v("代码质量： eslint jslint csslint")]),v._v(" "),_("li",[v._v("包管理工具： npm cnpm yarn pnpm")])]),v._v(" "),_("blockquote",[_("p",[v._v("前端历史两次重大突破：ajax && Node")])]),v._v(" "),_("img",{attrs:{src:"/beifen/758.png"}}),v._v(" "),_("h2",{attrs:{id:"前端代码质量管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端代码质量管理"}},[v._v("#")]),v._v(" 前端代码质量管理")]),v._v(" "),_("p",[v._v("避免破窗效应和为了更好的维护性，代码必须在一定规则下开发。")]),v._v(" "),_("ul",[_("li",[v._v("编码规范")]),v._v(" "),_("li",[v._v("可读性")]),v._v(" "),_("li",[v._v("可维护性")]),v._v(" "),_("li",[v._v("代码重复率")]),v._v(" "),_("li",[v._v("可测试性")])]),v._v(" "),_("h3",{attrs:{id:"前端组件建设"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端组件建设"}},[v._v("#")]),v._v(" 前端组件建设")]),v._v(" "),_("ul",[_("li",[v._v("高内聚（一个组件之完成一件事）")]),v._v(" "),_("li",[v._v("低耦合（一个组件可以轻易被替换）")]),v._v(" "),_("li",[v._v("可复用性")])]),v._v(" "),_("h4",{attrs:{id:"组件分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件分类"}},[v._v("#")]),v._v(" 组件分类")]),v._v(" "),_("ol",[_("li",[v._v("按复杂度：原子组件（颗粒度最细无法拆分如Button）+ 复合组件（table）")]),v._v(" "),_("li",[v._v("按可视化：视图组件+功能组件（如时间格式化）")]),v._v(" "),_("li",[v._v("按功能领域：通用组件+业务组件")])])])}),[],!1,null,null,null);_.default=l.exports}}]);