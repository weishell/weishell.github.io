(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{469:function(t,a,s){"use strict";s.r(a);var n=s(16),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" js")]),t._v(" "),s("p",[t._v("JavaScript是一门高级的编程语言。")]),t._v(" "),s("ul",[s("li",[t._v("那么有高级编程语言，就有低级编程语言，从编程语言发展历史来说，可以划分为三个阶段：\n"),s("ul",[s("li",[t._v("机器语言：1000100111011000，一些机器指令；")]),t._v(" "),s("li",[t._v("汇编语言：mov ax,bx，一些汇编指令；")]),t._v(" "),s("li",[t._v("高级语言：C、C++、Java、JavaScript、Python；")])])])]),t._v(" "),s("p",[t._v("但是计算机它本身是不认识这些高级语言的，所以我们的代码最终还是需要被转换成机器指令")]),t._v(" "),s("img",{attrs:{src:"/beifen/496.jpg"}}),t._v(" "),s("img",{attrs:{src:"/beifen/497.jpg"}}),t._v(" "),s("p",[t._v("浏览器内核指的是浏览器的排版引擎：排版引擎（layout engine），也称为浏览器引擎（browser engine）、页面渲染引擎（rendering engine）或样版引擎")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/htmlcss/A001somesmall.html#内核"}},[t._v("内核")])],1),t._v(" "),s("img",{attrs:{src:"/beifen/498.jpg"}}),t._v(" "),s("ul",[s("li",[s("p",[t._v("JavaScript代码由谁来执行呢？=> JavaScript引擎")])]),t._v(" "),s("li",[s("p",[t._v("为什么需要JavaScript引擎呢？")]),t._v(" "),s("ul",[s("li",[t._v("高级的编程语言都是需要转成最终的机器指令来执行的；")]),t._v(" "),s("li",[t._v("事实上编写的JavaScript无论你交给浏览器或者Node执行，最后都是需要被CPU执行的；")]),t._v(" "),s("li",[t._v("但是CPU只认识自己的指令集，实际上是机器语言，才能被CPU所执行；")]),t._v(" "),s("li",[t._v("所以需要JavaScript引擎帮助我们将JavaScript代码翻译成CPU指令来执行；")])])]),t._v(" "),s("li",[s("p",[t._v("比较常见的JavaScript引擎有哪些呢？")]),t._v(" "),s("ul",[s("li",[t._v("SpiderMonkey：第一款JavaScript引擎，由Brendan Eich开发（也就是JavaScript作者）；")]),t._v(" "),s("li",[t._v("Chakra：微软开发，用于IT浏览器；")]),t._v(" "),s("li",[t._v("JavaScriptCore：WebKit中的JavaScript引擎，Apple公司开发；")]),t._v(" "),s("li",[t._v("V8：Google开发的强大JavaScript引擎，也帮助Chrome从众多浏览器中脱颖而出；")])])])]),t._v(" "),s("h3",{attrs:{id:"浏览器内核和js引擎的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核和js引擎的关系"}},[t._v("#")]),t._v(" 浏览器内核和JS引擎的关系")]),t._v(" "),s("p",[t._v("这里先以WebKit为例，WebKit事实上由两部分组成的：")]),t._v(" "),s("ul",[s("li",[t._v("WebCore：负责HTML解析、布局、渲染等等相关的工作；")]),t._v(" "),s("li",[t._v("JavaScriptCore：解析、执行JavaScript代码；")])]),t._v(" "),s("img",{attrs:{src:"/beifen/499.jpg"}}),t._v(" "),s("h3",{attrs:{id:"v8引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎"}},[t._v("#")]),t._v(" V8引擎")]),t._v(" "),s("ul",[s("li",[t._v("V8是用C ++编写的Google开源高性能JavaScript和WebAssembly引擎，它用于Chrome和Node.js等。")]),t._v(" "),s("li",[t._v("它实现ECMAScript和WebAssembly，并在Windows 7或更高版本，macOS 10.12+和使用x64，IA-32，ARM或MIPS处理器的Linux系统上运行。")])]),t._v(" "),s("img",{attrs:{src:"/beifen/500.jpg"}}),t._v(" "),s("p",[t._v("V8引擎本身的源码非常复杂，大概有超过100w行C++代码，但是我们可以简单了解一下它执行JavaScript代码的原理：")]),t._v(" "),s("ul",[s("li",[t._v("Parse模块会将JavaScript代码转换成AST（抽象语法树），这是因为解释器并不直接认识JavaScript代码；")]),t._v(" "),s("li",[t._v("如果函数没有被调用，那么是不会被转换成AST的；")]),t._v(" "),s("li",[t._v("Parse的V8官方文档：https://v8.dev/blog/scanner")]),t._v(" "),s("li",[t._v("Ignition是一个解释器，会将AST转换成ByteCode（字节码）,可以跨端运行")]),t._v(" "),s("li",[t._v("同时会收集TurboFan优化所需要的信息（比如函数参数的类型信息，有了类型才能进行真实的运算）；")]),t._v(" "),s("li",[t._v("如果函数只调用一次，Ignition会执行解释执行ByteCode；")]),t._v(" "),s("li",[t._v("Ignition的V8官方文档：https://v8.dev/blog/ignition-interpreter")])]),t._v(" "),s("p",[t._v("TurboFan是一个编译器，可以将字节码编译为CPU可以直接执行的机器码；")]),t._v(" "),s("ul",[s("li",[t._v("如果一个函数被多次调用，那么就会被标记为"),s("code",[t._v("热点函数")]),t._v("，那么就会经过TurboFan转换成优化的机器码，提高代码的执行性能；")]),t._v(" "),s("li",[t._v("但是，机器码实际上也会被还原为ByteCode，这是因为如果后续执行函数的过程中，类型发生了变化（比如sum函数原来执行的是number类型，后来执行变成了string类型），之前优化的机器码并不能正确的处理运算，就会逆向的转换成字节码；")]),t._v(" "),s("li",[t._v("TurboFan的V8官方文档：https://v8.dev/blog/turbofan-jit")])]),t._v(" "),s("img",{attrs:{src:"/beifen/501.jpg"}}),t._v(" "),s("p",[t._v("那么JavaScript源码是如何被解析（Parse过程）的呢？")]),t._v(" "),s("ul",[s("li",[t._v("Blink将源码交给V8引擎，Stream获取到源码并且进行编码转换；")]),t._v(" "),s("li",[t._v("Scanner会进行词法分析（lexical analysis），词法分析会将代码转换成tokens；")]),t._v(" "),s("li",[t._v("接下来tokens会被转换成AST树，经过Parser和PreParser：\n"),s("ul",[s("li",[t._v("Parser就是直接将tokens转成AST树架构；")]),t._v(" "),s("li",[t._v("PreParser称之为预解析，为什么需要预解析呢？\n"),s("ol",[s("li",[t._v("这是因为并不是所有的JavaScript代码，在一开始时就会被执行。那么对所有的JavaScript代码进行解析，必然会影响网页的运行效率；")]),t._v(" "),s("li",[t._v("所以V8引擎就实现了Lazy Parsing（延迟解析）的方案，它的作用是将不必要的函数进行预解析，也就是只解析暂时需要的内容，而对函数的全量解析是在函数被调用时才会进行；")]),t._v(" "),s("li",[t._v("比如我们在一个函数outer内部定义了另外一个函数inner，那么inner函数就会进行预解析；")])])])])]),t._v(" "),s("li",[t._v("生成AST树后，会被Ignition转成字节码（bytecode），之后的过程就是代码的执行过程")])]),t._v(" "),s("div",{staticClass:"imp"},[s("ul",[s("li",[t._v("在编译前会创建一个globalObject，将代码中的var变量属性值都写入")]),t._v(" "),s("li",[t._v("在执行到该行代码就会赋值或者操作，如果提前打印或者使用，也不会报错")]),t._v(" "),s("li",[t._v("如果是函数，就会在堆中创建一个存储空间指向对应的globalObject")]),t._v(" "),s("li",[t._v("函数执行会创建一个函数执行上下文，也会有一个AO对象对应着拿到属性")]),t._v(" "),s("li",[t._v("执行时再赋值")]),t._v(" "),s("li",[t._v("当函数执行完，函数执行上下文会被弹出栈，AO对象也会被销毁")]),t._v(" "),s("li",[t._v("当再次执行函数时，函数执行上下文和AO对象会再次被创建\n"),s("img",{attrs:{src:"/beifen/502.jpg"}}),t._v(" "),s("img",{attrs:{src:"/beifen/503.jpg"}}),t._v(" "),s("img",{attrs:{src:"/beifen/504.jpg"}}),t._v(" "),s("img",{attrs:{src:"/beifen/505.jpg"}})])])]),t._v(" "),s("ul",[s("li",[t._v("作用域链")]),t._v(" "),s("li",[t._v("scope chain")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"why"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:"/beifen/506.png"}}),t._v(" "),s("ul",[s("li",[t._v("函数调用函数")]),t._v(" "),s("li",[s("code",[t._v("函数foo在创建global object时已经创建在其中，所以他的作用域链指向自己和最外层")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Global"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Bar"')]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello Global")]),t._v("\n")])])]),s("img",{attrs:{src:"/beifen/507.png"}}),t._v(" "),s("img",{attrs:{src:"/beifen/508.jpg"}}),t._v(" "),s("h4",{attrs:{id:"作用域相关题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域相关题"}},[t._v("#")]),t._v(" 作用域相关题")]),t._v(" "),s("ul",[s("li",[t._v("虽然return之后代码在执行时不会执行，但是在创建时已经把函数中的a添加到AO对象之中，所以获取的是foo函数中自己的a，初始值undefined")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),s("ul",[s("li",[t._v("当在函数中声明的变量没有用var声明，那么自动默认是全局对象中声明的")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 转成下面的两行代码")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var a = 10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b = 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(a)//报错")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);