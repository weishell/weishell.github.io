(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{380:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"eval-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eval-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" eval()函数")]),t._v(" "),s("p",[t._v("eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码。\n它的功能是把对应的字符串解析成JS代码并运行；\n应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string 必需。要计算的字符串，其中含有要计算的 JavaScript 表达式或要执行的语句。")]),t._v("\n")])])]),s("p",[t._v("返回值: 通过计算 string 得到的值（如果有的话）。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x=10;y=20;document.write(x*y)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2+2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//200")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//27")]),t._v("\n")])])]),s("h3",{attrs:{id:"解析json对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析json对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 解析json对象")]),t._v(" "),s("p",[t._v("json字符串转化为json对象？\n使用eval()这个内置函数，该方式也适合以普通js方式获取json对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dataObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"为什么eval这里要添加-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么eval这里要添加-data","aria-hidden":"true"}},[t._v("#")]),t._v(' 为什么eval这里要添加("("+data+")") ?')]),t._v(" "),s("p",[t._v("由于json是以{ }的方式来开始以及结束的，在eval中会被当成一个语句块来处理，故必须强制将它转换成一种表达式。\n加上圆括号是使eval函数在处理时强制将括号内的表达式(expression)转化为对象而不作为语句(statement)来执行。\n若不加外层的括号，eval会将大括号识别为js代码块的开始和结束标记，{ }将会被认为执行了一句空语句。")])])}],!1,null,null,null);a.default=e.exports}}]);