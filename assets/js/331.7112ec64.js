(window.webpackJsonp=window.webpackJsonp||[]).push([[331],{805:function(s,t,a){"use strict";a.r(t);var e=a(31),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"ts数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts数据类型"}},[s._v("#")]),s._v(" ts数据类型")]),s._v(" "),a("h3",{attrs:{id:"安装ts包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装ts包"}},[s._v("#")]),s._v(" 安装TS包")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cnpm install typescript -g\ntsc --version\n")])])]),a("ol",[a("li",[s._v("初始化项目：进入编程文件夹后，可以使用npm init -y来初始化项目，生成package.json。")]),s._v(" "),a("li",[s._v("创建tsconfig.json文件，在终端中输入tsc --init：它是一个TS项目的配置文件，可以通过读取它来设置TS编译器的编译参数。")]),s._v(" "),a("li",[s._v("安装@types/node,使用npm install @types/node --dev-save进行安装。这个主要是解决模块的声明文件问题。")]),s._v(" "),a("li",[s._v("编写HelloWorld.ts文件，然后进行保存，代码如下。")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HelloWorld"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cat xxx.xx//可以查看某文件的具体内容，打印在控制台\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[s._v("在Vscode的任务菜单下，打开运行生成任务，然后选择tsc：构建-tsconfig.json")]),s._v(" ，这时候就会生成一个helloWorld.js文件")]),s._v(" "),a("li",[s._v("在终端中输入node helloWorld.js就可以看到结果了。")])]),s._v(" "),a("blockquote",[a("p",[s._v("更便捷的安装ts-node，然后使用ts-node启动ts文件")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cnpm i ts-node -g\n")])])]),a("h3",{attrs:{id:"ts-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-undefined"}},[s._v("#")]),s._v(" TS undefined")]),s._v(" "),a("p",[s._v("在js中当定义了一个变量，但没有赋予任何值的时候，他就是undefined类型。")]),s._v(" "),a("p",[s._v("新建demo01.ts文件，下入下面代码：")]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明数值类型的变量age，但不予赋值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("写完后保存代码，进行运行任务，然后生成demo01.js，在终端中使用node demo01.js来进行查看运行结果。控制台输出了undefined,跟预想的一样。这只是在tsc demo01.ts之后得到的js才生效。ts这样写会报异常，运行ts-node demo01.ts会报错。")]),s._v(" "),a("Gotop")],1)}),[],!1,null,null,null);t.default=n.exports}}]);