(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{450:function(t,s,a){"use strict";a.r(s);var n=a(16),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"webgl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webgl"}},[t._v("#")]),t._v(" webgl")]),t._v(" "),s("p",[t._v("WebGL仅仅是一个"),s("code",[t._v("光栅化引擎")]),t._v("，它可以根据你的代码绘制出点，线和三角形.")]),t._v(" "),s("p",[t._v("WebGL在电脑的GPU中运行。需要使用能够在GPU上运行的代码。 这样的代码需要提供成对的方法。每对方法中一个叫顶点着色器， 另一个叫片段着色器，并且使用一种和C或C++类似的强类型的语言 GLSL。 (GL着色语言)。 每一对组合起来称作一个 program（着色程序）。")]),t._v(" "),s("p",[t._v("顶点着色器的作用是计算顶点的位置。根据计算出的一系列"),s("code",[t._v("顶点位置")]),t._v("，WebGL可以对点， 线和三角形在内的一些图元进行光栅化处理。当对这些图元进行光栅化处理时需要使用片段着色器方法。 片段着色器的作用是计算出当前绘制图元中每个像素的"),s("code",[t._v("颜色值")]),t._v("。")]),t._v(" "),s("p",[t._v("对于想要绘制的每一个对象，都需要先设置一系列状态值，然后通过调用 "),s("code",[t._v("gl.drawArrays 或 gl.drawElements")]),t._v(" 运行一个着色方法对，使得你的着色器对能够在GPU上运行。")]),t._v(" "),s("h3",{attrs:{id:"着色器获取数据的4种方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#着色器获取数据的4种方法"}},[t._v("#")]),t._v(" 着色器获取数据的4种方法")]),t._v(" "),s("ol",[s("li",[t._v("属性（Attributes）和缓冲")])]),t._v(" "),s("p",[t._v("缓冲是发送到GPU的一些二进制数据序列，通常情况下缓冲数据包括位置，法向量，纹理坐标，顶点颜色值等。 你可以存储任何数据。")]),t._v(" "),s("p",[t._v("属性用来指明怎么从缓冲中获取所需数据并将它提供给顶点着色器。 例如你可能在缓冲中用三个32位的浮点型数据存储一个位置值。 对于一个确切的属性你需要告诉它从哪个缓冲中获取数据，获取什么类型的数据（三个32位的浮点数据）， 起始偏移值是多少，到下一个位置的字节数是多少。")]),t._v(" "),s("p",[t._v("缓冲不是随意读取的。事实上顶点着色器运行的次数是一个指定的确切数字， 每一次运行属性会从指定的缓冲中按照指定规则依次获取下一个值。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("全局变量（Uniforms）")])]),t._v(" "),s("p",[t._v("全局变量在着色程序运行前赋值，在运行过程中全局有效。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("纹理（Textures）")])]),t._v(" "),s("p",[t._v("纹理是一个数据序列，可以在着色程序运行中随意读取其中的数据。 大多数情况存放的是图像数据，但是纹理仅仅是数据序列， 你也可以随意存放除了颜色数据以外的其它数据。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("可变量（Varyings）")])]),t._v(" "),s("p",[t._v("可变量是一种顶点着色器给片段着色器传值的方式，依照渲染的图元是点， 线还是三角形，顶点着色器中设置的可变量会在片段着色器运行中获取不同的插值。")]),t._v(" "),s("h3",{attrs:{id:"webgl案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webgl案例"}},[t._v("#")]),t._v(" WEBGL案例")]),t._v(" "),s("p",[t._v("无论画布有多大，"),s("strong",[t._v("裁剪空间的坐标范围永远是 -1 到 1 。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 顶点着色器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个属性值，将会从缓冲中获取数据")]),t._v("\nattribute vec4 a_position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有着色器都有一个main方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gl_Position 是一个顶点着色器主要设置的变量")]),t._v("\n    gl_Position "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a_position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 片段着色器没有默认精度，所以我们需要设置一个精度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mediump是一个不错的默认值，代表“medium precision”（中等精度）")]),t._v("\nprecision mediump float"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gl_FragColor是一个片段着色器主要设置的变量")]),t._v("\n    gl_FragColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回“红紫色”")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上方设置 gl_FragColor 为 1, 0, 0.5, 1，WebGL中的颜色值范围从 0 到 1 。")]),t._v(" "),s("Gotop")],1)}),[],!1,null,null,null);s.default=e.exports}}]);