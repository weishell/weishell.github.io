(window.webpackJsonp=window.webpackJsonp||[]).push([[272],{655:function(v,t,_){"use strict";_.r(t);var e=_(16),l=Object(e.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"js对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js对象"}},[v._v("#")]),v._v(" js对象")]),v._v(" "),_("ul",[_("li",[v._v("JavaScript中的对象被设计成一组属性的无序集合，像是一个哈希表，有key和value组成")]),v._v(" "),_("li",[v._v("key是一个标识符名称，value可以是任意类型，也可以是其他对象或者函数类型")]),v._v(" "),_("li",[v._v("如果值是一个函数，可以称之为是对象的方法")])]),v._v(" "),_("p",[v._v("JavaScript当中每个对象都有一个特殊的内置属性 [[prototype]]，这个特殊的对象可以指向另外一个对象。")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("这个对象有什么用呢？")]),v._v(" "),_("ul",[_("li",[v._v("当通过引用对象的属性key来获取一个value时，它会触发 [[Get]]的操作；")]),v._v(" "),_("li",[v._v("这个操作会首先检查该属性是否有对应的属性，如果有的话就使用它；")]),v._v(" "),_("li",[v._v("如果对象中没有改属性，那么会访问对象[[prototype]]内置属性指向的对象上的属性；")])])]),v._v(" "),_("li",[_("p",[v._v("获取的方式有两种：")]),v._v(" "),_("ul",[_("li",[v._v("方式一：通过对象的 "),_("code",[v._v("__proto__(隐式原型)")]),v._v(" 属性可以获取到（但这个是早期浏览器自己添加的，存在一定兼容问题）；")]),v._v(" "),_("li",[v._v("方式二：通过 Object.getPrototypeOf 方法可以获取到；")])])])]),v._v(" "),_("h2",{attrs:{id:"javascript中的对象分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的对象分类"}},[v._v("#")]),v._v(" JavaScript中的对象分类")]),v._v(" "),_("p",[v._v("可以把对象分成几类。")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("宿主对象（host Objects）：由JavaScript宿主环境提供的对象，它们的行为完全由宿主环境决定。(在浏览器环境中，我们都知道全局对象是window，window上又有很多属性，如document。)")])]),v._v(" "),_("li",[_("p",[v._v("内置对象（Built-in Objects）：由JavaScript语言提供的对象。")]),v._v(" "),_("ul",[_("li",[v._v("固有对象（Intrinsic Objects ）：由标准规定，随着JavaScript运行时创建而自动创建的对象实例。")]),v._v(" "),_("li",[v._v("原生对象（Native Objects）：可以由用户通过Array、RegExp等内置构造器或者特殊语法创建的对象。")]),v._v(" "),_("li",[v._v("普通对象（Ordinary Objects）：由{}语法、Object构造器或者class关键字定义类创建的对象，它能够被原型继承。")])])])]),v._v(" "),_("Img",{attrs:{src:"/beifen/218.png"}}),v._v(" "),_("h4",{attrs:{id:"属性的类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#属性的类型"}},[v._v("#")]),v._v(" 属性的类型")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("数据属性")]),v._v(" "),_("ul",[_("li",[v._v("[[Configuerable]]:表示属性是否可以通过delete删除并重新定义")]),v._v(" "),_("li",[v._v("[[Enumberable]]:是否可以使用for-in返回该属性")]),v._v(" "),_("li",[v._v("[[Writale]]")]),v._v(" "),_("li",[v._v("[[Value]]")])])]),v._v(" "),_("li",[_("p",[v._v("访问器属性")]),v._v(" "),_("ul",[_("li",[v._v("[[Configuerable]]")]),v._v(" "),_("li",[v._v("[[Enumberable]]")]),v._v(" "),_("li",[v._v("[[Get]]:读")]),v._v(" "),_("li",[v._v("[[Set]]:写")])])])])],1)}),[],!1,null,null,null);t.default=l.exports}}]);