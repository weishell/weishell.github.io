(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{451:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("p",[t._v("Hyper Text Transfer Protocol（超文本传输协议）,服务器传输超文本到本地浏览器的传送协议。HTTP 是基于 TCP/IP 协议通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。不涉及数据包（packet）传输，主要规定了客户端和服务器之间的通信格式，默认80端口。")]),t._v(" "),e("h2",{attrs:{id:"http的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http的特点","aria-hidden":"true"}},[t._v("#")]),t._v(" Http的特点")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("简单快速：客户向服务器请求服务时，只需传送请求方法和路径。常用GET、HEAD、PUT、DELETE、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。")])]),t._v(" "),e("li",[e("p",[t._v("灵活：HTTP允许传输任意类型的数据对象。")])]),t._v(" "),e("li",[e("p",[t._v("无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。")])]),t._v(" "),e("li",[e("p",[t._v("无状态："),e("strong",[t._v("HTTP协议是无状态的，HTTP 协议自身不对请求和响应之间的通信状态进行保存。任何两次请求之间都没有依赖关系。")]),t._v(" 直观地说，就是每个请求都是独立的，与前面的请求和后面的请求都是没有直接联系的。协议本身并不保留之前一切的请求或 响应报文的信息。这是为了更快地处理大量事务，确保协议的可伸缩性，而特意把 HTTP 协议设计成如此简单的。")])])]),t._v(" "),e("h2",{attrs:{id:"http报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http报文","aria-hidden":"true"}},[t._v("#")]),t._v(" Http报文")]),t._v(" "),e("p",[t._v("Http报文包括请求报文和响应报文两大部分，其中请求报文由请求行（request line）、请求头（header）、空行和请求体四个部分组成。而响应报文由状态行、响应头部、空行和响应体四个部分组成。")]),t._v(" "),e("ol",[e("li",[t._v("请求行，用来说明请求类型,要访问的资源以及所使用的HTTP版本。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("POST  /chapter17/user.html HTTP/1.1\n")])])]),e("p",[t._v("以上代码中“POST ”代表请求方法，“/chapter17/user.html”表示URI，“HTTP/1.1”代表协议和协议的版本。现在比较流行的是Http1.1版本")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("请求头由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔。")])]),t._v(" "),e("p",[t._v("请求头部通知服务器有关于客户端请求的信息。它包含许多有关的客户端环境和请求正文的有用信息。其中比如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Host，表示主机名，虚拟主机；\nConnection,HTTP/1.1增加的，使用keepalive，即持久连接，一个连接可以发多个请求；\nUser-Agent，请求发出者，兼容性以及定制化需求。\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("最后一个请求头之后是一个空行，这个行非常重要，它表示请求头已经结束，接下来的是请求正文。")]),t._v(" "),e("li",[e("em",[e("strong",[t._v("请求体")])]),t._v(" ，可以承载多个请求参数的数据")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("name=tom&password=1234&realName=tomson\n")])])]),e("p",[t._v("上面代码，承载着name、password、realName三个请求参数。")]),t._v(" "),e("h3",{attrs:{id:"http请求方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http请求方法","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP请求方法")]),t._v(" "),e("ul",[e("li",[t._v("GET 请求指定的页面信息，并返回实体主体。")]),t._v(" "),e("li",[t._v("HEAD 类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头")]),t._v(" "),e("li",[t._v("POST 向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。")]),t._v(" "),e("li",[t._v("PUT 从客户端向服务器传送的数据取代指定的文档的内容。")]),t._v(" "),e("li",[t._v("DELETE 请求服务器删除指定的页面。")])]),t._v(" "),e("h3",{attrs:{id:"get与post区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get与post区别","aria-hidden":"true"}},[t._v("#")]),t._v(" GET与POST区别")]),t._v(" "),e("ul",[e("li",[t._v("GET在浏览器回退时是无害的，而POST会再次提交请求")]),t._v(" "),e("li",[t._v("GET请求会被浏览器主动缓存，而POST不会，除非手动设置")]),t._v(" "),e("li",[t._v("GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留")]),t._v(" "),e("li",[t._v("GET请求在URL中传送的参数是有长度限制的，而POST没有限制")]),t._v(" "),e("li",[t._v("GET参数通过URL传递，POST放在Request body中")])])])}],!1,null,null,null);a.default=r.exports}}]);