(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{752:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git小乌龟使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git小乌龟使用"}},[t._v("#")]),t._v(" git小乌龟使用")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/xuwenjin/p/8573603.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.jianshu.com/p/982b30c9fa63",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码回滚"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"git操作失败并提示another-git-process-seems-to-be-running-in-this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git操作失败并提示another-git-process-seems-to-be-running-in-this"}},[t._v("#")]),t._v(" Git操作失败并提示Another git process seems to be running in this......")]),t._v(" "),a("p",[t._v("Git操作的过程中突然显示Another git process semms to be running in this repository, e.g. an editor opened by ‘git commit’. Please make sure all processes are terminated then try again. If it still fails, a git process remove the file manually to continue…\n翻译过来就是git被另外一个程序占用，重启机器也不能够解决。")]),t._v(" "),a("p",[t._v("原因在于Git在使用过程中遭遇了奔溃，部分被上锁资源没有被释放导致的。")]),t._v(" "),a("p",[a("code",[t._v("解决方案：进入项目文件夹下的 .git文件中（显示隐藏文件夹或rm .git/index.lock）删除index.lock文件即可。")])]),t._v(" "),a("h4",{attrs:{id:"git校验避开提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git校验避开提交"}},[t._v("#")]),t._v(" git校验避开提交")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git add .\ngit commit -m '乌龟' --no-verify\ngit push \n")])])]),a("h3",{attrs:{id:"git-hooks-husky"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks-husky"}},[t._v("#")]),t._v(" git hooks  => husky")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cnpm i husky --save-dev\n")])])]),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run lint && npm run test"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg-scripts start --daemon --title=egg-server-server"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stop"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg-scripts stop --title=egg-server-server"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg-bin dev"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debug"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg-bin debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run lint -- --fix && npm run test-local"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test-local"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg-bin test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cov"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg-bin cov"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint ."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ci"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run lint && npm run cov"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"autod"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"autod"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h3",{attrs:{id:"git代码提交规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git代码提交规范"}},[t._v("#")]),t._v(" git代码提交规范")]),t._v(" "),a("h4",{attrs:{id:"commitizen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitizen"}},[t._v("#")]),t._v(" commitizen")]),t._v(" "),a("p",[t._v("用指令提交时使用。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cnpm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g commitizen\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("commitizen init cz-conventional-changelog --save-dev --save-exact\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cz\n")])])]),a("h3",{attrs:{id:"husky-结合-commitlint-校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky-结合-commitlint-校验"}},[t._v("#")]),t._v(" husky 结合 commitlint 校验")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cnpm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" husky --save-dev\n")])])]),a("p",[t._v("检测提交 commit 提交记录是否符合规范需要 commitlint")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -D @commitlint/config-conventional @commitlint/cli\n")])])]),a("p",[t._v("检测提交暂存区的代码是否合规需要 lint-staged")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -D lint-staged\n")])])]),a("h5",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("ul",[a("li",[t._v("lint-staged\n在 package.json 文件中添加相关配置")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.{js,ts}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --fix"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("commitlint\n在项目下新建文件 commitlint.config.js 文件写入配置")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/config-conventional"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("也可以添加自定义配置规则，相关文档 "),a("a",{attrs:{href:"https://commitlint.js.org/#/reference-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint rules"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("husky\n上面已经配置好了相关依赖，需要使用 husky 与实际操作关联起来。")])]),t._v(" "),a("p",[t._v("有部分命令像是 husky add 只能使用 yarn 执行成功，所以操作不成功可以采取"),a("code",[t._v("手动添加")]),t._v("的方式。")]),t._v(" "),a("p",[t._v("在 package.json 中添加新的 scripts （对应命令："),a("code",[t._v('npm set-script prepare "husky install"')]),t._v("）")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prepare"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky install"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("prepare 是 NPM 操作生命周期中的一环，在执行 install 的时候会按生命周期顺序执行相应钩子：\nNPM7： preinstall -> install -> postinstall -> prepublish -> preprepare -> prepare -> postprepare 文档 npm7 scripts\nNPM6： preinstall -> install -> postinstall，同时也会触发 prepublish、prepare 文档 npm6 scripts\n执行 npm run prepare ，在项目下会生成一个 .husky 文件夹，用户可以在其中配置相关 git hooks。")]),t._v(" "),a("p",[t._v("在 .husky 下添加一个文件，名称为相关 git hooks 的名称。")]),t._v(" "),a("p",[t._v("添加 "),a("em",[a("strong",[t._v("pre-commit")])]),t._v(" 文件，写入配置（对应命令："),a("code",[t._v('npx husky add .husky/pre-commit "npx lint-staged --allow-empty $1"')]),t._v("）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('/_/husky.sh"')]),t._v("\n\nnpx lint-staged --allow-empty "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n")])])]),a("p",[t._v("这样就与 lint-staged 关联起来了，在提交代码的时候就会按 lint-staged 配置去检测文件。")]),t._v(" "),a("p",[t._v("添加 "),a("em",[a("strong",[t._v("commit-msg")])]),t._v(" 文件，写入配置（对应命令："),a("code",[t._v('npx husky add .husky/commit-msg "npx commitlint --edit $1"')]),t._v("）")]),t._v(" "),a("p",[t._v("这样在提交时会检查 commit 信息是否符合开发规范")]),t._v(" "),a("p",[t._v("git hooks中，提交时的钩子有：pre-commit 提交之前执行（git commit --no-verify 可以跳过此阶段） -> prepare-commit-msg 启动提交信息编辑之前 -> commit-msg 填写提交信息之后 -> post-commit 提交过程结束最后。")]),t._v(" "),a("h3",{attrs:{id:"git-合并回退处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-合并回退处理"}},[t._v("#")]),t._v(" git 合并回退处理")]),t._v(" "),a("ul",[a("li",[t._v("本地合并分支后发现合并有问题，回退到合并前的索引")])]),t._v(" "),a("p",[t._v("使用git log 查看提交记录，找到合并前的索引")]),t._v(" "),a("img",{attrs:{src:"/beifen/387.png"}}),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard  229a275e41b22c3a241587b2324b2d4d6dea89b4\n")])])]),a("h4",{attrs:{id:"线上回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线上回滚"}},[t._v("#")]),t._v(" 线上回滚")]),t._v(" "),a("p",[t._v("本地选择回退到对应的版本")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin HEAD --force "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制提交一次，之前错误的提交就从远程仓库删除")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("其他的更新记录就丢失了，慎用")])]),t._v(" "),a("h4",{attrs:{id:"revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revert"}},[t._v("#")]),t._v(" revert")]),t._v(" "),a("p",[t._v("使用 git revert "),a("code",[t._v("<commit id>")]),t._v(" 即可，git 会生成一个新的 commit，将指定的 commit 内容从当前分支上撤除。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/cangqinglang/p/13726310.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("revert"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000040418948",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);