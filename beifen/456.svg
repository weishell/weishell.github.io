<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3421px" height="2751px" viewBox="-0.5 -0.5 3421 2751" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-08-30T06:10:34.206Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&quot; etag=&quot;2adjYgwHROYC_0q8r4nQ&quot; version=&quot;20.2.7&quot; type=&quot;github&quot;&gt;&lt;diagram name=&quot;Page-1&quot; id=&quot;c7558073-3199-34d8-9f00-42111426c3f3&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="769" y="575" width="276" height="176" rx="26.4" ry="26.4" fill="#e6ffcc" stroke="rgb(0, 0, 0)" stroke-width="3" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 278px; height: 176px; padding-top: 575px; margin-left: 768px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center; width: 276px; height: 176px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px;"><u>// 初始化一个应用的方式如下</u></p><p style="margin: 4px 0px 0px;"><u><br /></u></p><p style="margin: 4px 0px 0px;"><u>import { createApp } from 'vue'</u></p><p style="margin: 4px 0px 0px;"><u><br /></u></p><p style="margin: 4px 0px 0px;"><u>import App from './app'</u></p><p style="margin: 4px 0px 0px;"><u><br /></u></p><p style="margin: 4px 0px 0px;"><u>const app = <font color="#ff0080">createApp(App)</font></u></p><p style="margin: 4px 0px 0px;"><u><br /></u></p><p style="margin: 4px 0px 0px;"><u>app.mount('#app')</u></p><div><br /></div></div></div></div></foreignObject><text x="907" y="667" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">// 初始化一个应用的方式如下...</text></switch></g><rect x="786" y="826" width="249" height="50" fill="#ffcccc" stroke="rgb(0, 0, 0)" stroke-width="3" pointer-events="all"/><path d="M 798 826 L 798 876 M 1023 826 L 1023 876" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 223px; height: 1px; padding-top: 851px; margin-left: 799px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Vue3</div></div></div></foreignObject><text x="911" y="855" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Vue3</text></switch></g><path d="M 905 751 L 905 758 Q 905 765 905 775 L 905 817.76" fill="none" stroke="#990000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 905 823.76 L 901 815.76 L 905 817.76 L 909 815.76 Z" fill="#990000" stroke="#990000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"/><rect x="891" y="776" width="30" height="20" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="905.5" y="788.5">创建实例</text></g><rect x="1095" y="465" width="340" height="320" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 338px; height: 1px; padding-top: 625px; margin-left: 1096px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="text-align: left;"><b>const <font color="#cc0066">createApp</font> = ((...args) =&gt; {</b></div><div style="text-align: left;"><b><br /></b></div><div style="text-align: left;"><b><font color="#0000cc">  </font><font color="#0000ff">// 创建 app 对象</font></b></div><div style="text-align: left;"><b>  const app = <font color="#cc0066">ensureRenderer</font>().createApp(...args)</b></div><div style="text-align: left;"><b>  const { mount } = app</b></div><div style="text-align: left;"><b><br /></b></div><div style="text-align: left;"><b> <font color="#0000ff"> // 重写 mount 方法</font></b></div><div style="text-align: left;"><b>  <font color="#cc0066">app.mount</font> = (containerOrSelector) =&gt; {</b></div><div style="text-align: left;"><b>    // ...</b></div><div style="text-align: left;"><b>  }</b></div><div style="text-align: left;"><b><br /></b></div><div style="text-align: left;"><b>  return app</b></div><div style="text-align: left;"><b>})</b></div></div></div></div></foreignObject><text x="1265" y="629" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">const createApp = ((...args) =&gt; {...</text></switch></g><path d="M 1045 665 L 1090.5 619.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1094.21 615.79 L 1091.73 623.22 L 1090.5 619.5 L 1086.78 618.27 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1565" y="425" width="370" height="370" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 368px; height: 1px; padding-top: 610px; margin-left: 1567px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><font color="#000000"><b>// 渲染相关的一些配置，比如更新属性的方法，操作 DOM 的方法</b></font></div><div><font color="#000000"><b>const rendererOptions = {...</b></font><b style="background-color: initial;">}</b></div><div><font color="#000000"><b><br /></b></font></div><div><font color="#000000"><b>let renderer</b></font></div><div><font color="#000000"><b><br /></b></font></div><div><font color="#000000"><b>// 延时创建渲染器，当用户只依赖响应式包的时候，可以通过 tree-shaking 移除核心渲染逻辑相关的代码</b></font></div><div><font color="#000000"><b>function ensureRenderer() {</b></font></div><div><font color="#000000"><b>  return renderer || (renderer = createRenderer(rendererOptions))</b></font></div><div><font color="#000000"><b>}</b></font></div><div><font color="#000000"><b>function createRenderer(options) {</b></font></div><div><font color="#000000"><b>  return baseCreateRenderer(options)</b></font></div><div><font color="#000000"><b>}</b></font></div><div><b style="">function <font color="#cc0066">baseCreateRenderer</font>(options) {</b></div><div><b style="">  function <font color="#cc0066">render</font>(vnode, container) {</b></div><div><b style="">   <font color="#0000ff"> // 组件渲染的核心逻辑</font></b></div><div><font color="#000000"><b>  }</b></font></div><div><font color="#000000"><b>  return {</b></font></div><div><font color="#000000"><b>    render,</b></font></div><div><b style="">    createApp: <font color="#cc0066">createAppAPI</font>(render)</b></div><div><font color="#000000"><b>  }</b></font></div><div><font color="#000000"><b>}</b></font></div><div><font color="#000000"><b><br /></b></font></div><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1567" y="614" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">// 渲染相关的一些配置，比如更新属性的方法，操作 DOM 的方法...</text></switch></g><path d="M 1545 606 L 1558.76 608.75" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1563.9 609.78 L 1556.35 611.84 L 1558.76 608.75 L 1557.73 604.98 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1485" y="585" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 600px; margin-left: 1486px;"><div data-drawio-colors="color: #0000FF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="text-align: left;"><font color="#cc0000">ensureRenderer</font></b></div></div></div></foreignObject><text x="1515" y="604" fill="#0000FF" font-family="Helvetica" font-size="12px" text-anchor="middle">ensureRend...</text></switch></g><path d="M 1435 585 L 1485 600" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><rect x="2035" y="430" width="380" height="340" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 378px; height: 1px; padding-top: 600px; margin-left: 2036px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="text-align: left;"><font style=""><b style="">function <font color="#cc0066">createAppAPI</font>(render) {</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>  // createApp createApp 方法接受的两个参数：根组件的对象和 prop</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>  return function createApp(rootComponent, rootProps = null) {</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>    const app = {</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>      _component: rootComponent,</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>      _props: rootProps,</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>      mount(rootContainer) {</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><b>       <font color="#0000ff"> // 创建根组件的 vnode</font></b></div><div style="color: rgb(0, 0, 0); text-align: left;"><b>      <font color="#cc0066">  const vnode = createVNode(rootComponent, rootProps)</font></b></div><div style="color: rgb(0, 0, 0); text-align: left;"><b>       <font color="#0000ff"> // 利用渲染器渲染 vnode</font></b></div><div style="color: rgb(0, 0, 0); text-align: left;"><b>        <font color="#cc0066">render(vnode, rootContainer)</font></b></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>        app._container = rootContainer</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>        return vnode.component.proxy</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>      }</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b><br /></b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>    }</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>    return app</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>  }</b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b><br /></b></font></div><div style="color: rgb(0, 0, 0); text-align: left;"><font color="#000000"><b>}</b></font></div></div></div></div></foreignObject><text x="2225" y="604" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">function createAppAPI(render) {...</text></switch></g><path d="M 1941.37 604.89 L 2028.63 603.39" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1936.12 604.98 L 1943.06 601.36 L 1941.37 604.89 L 1943.18 608.36 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2033.88 603.3 L 2026.94 606.92 L 2028.63 603.39 L 2026.82 599.92 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1095" y="5" width="490" height="390" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 488px; height: 1px; padding-top: 200px; margin-left: 1097px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>app.mount = (containerOrSelector) =&gt; {</b></div><div><b>  // 标准化容器</b></div><div><b>  const container = normalizeContainer(containerOrSelector)</b></div><div> ......</div><div><b>  const component = app._component</b></div><div><b><br /></b></div><div><b>   // 如组件对象没定义 render 函数和 template ，取容器的 innerHTML 作为组件模板内容</b></div><div><b><br /></b></div><div><b>  if (!isFunction(component) &amp;&amp; !component.render &amp;&amp; !component.template) {</b></div><div><b><br /></b></div><div><b>    component.template = container.innerHTML</b></div><div><b><br /></b></div><div><b>  }</b></div><div><b><br /></b></div><div><b>  // 挂载前清空容器内容</b></div><div><b>  container.innerHTML = ''</b></div><div><b><br /></b></div><div><b>  // 真正的挂载,调用createAppApi里的mount</b></div><div><b>  return <font color="#cc0066">mount</font>(container)</b></div><div><b><br /></b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="1097" y="204" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">app.mount = (containerOrSelector) =&gt; {...</text></switch></g><path d="M 1346 458.63 L 1345.99 401.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1346 463.88 L 1342.5 456.88 L 1346 458.63 L 1349.5 456.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1345.99 396.12 L 1349.49 403.12 L 1345.99 401.37 L 1342.49 403.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1955" y="565" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 580px; margin-left: 1956px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b><font color="#cc0000">createAppApi</font></b></div></div></div></foreignObject><text x="1985" y="584" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">createAppA...</text></switch></g><rect x="1345" y="415" width="70" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 430px; margin-left: 1346px;"><div data-drawio-colors="color: #CC0000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>重写app.mount</b></div></div></div></foreignObject><text x="1380" y="434" fill="#CC0000" font-family="Helvetica" font-size="12px" text-anchor="middle">重写app.mount</text></switch></g><path d="M 1585 305 L 1845 315 L 2032.72 437.48" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="1805" y="295" width="100" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 310px; margin-left: 1806px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b><font color="#cc0000">mount重写之后再调用最初的</font></b></div></div></div></foreignObject><text x="1855" y="314" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">mount重写之后再调用最初的</text></switch></g><rect x="2030" y="815" width="390" height="380" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 388px; height: 1px; padding-top: 1005px; margin-left: 2032px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b><font color="#000000">function </font><font color="#cc0066">createVNode</font><font color="#000000">(type, props = null</font></b><b style="background-color: initial;"><font color="#000000">,children = null) {</font></b></div><div><b><font color="#000000">  if (props) {</font></b></div><div><b><font color="#000000">    // 处理 props 相关逻辑，标准化 class 和 style</font></b></div><div><b><font color="#000000">  }</font></b></div><div><b><font color="#000000">  // 对 vnode 类型信息编码</font></b></div><div><b><font color="#000000">  const shapeFlag = isString(type)</font></b></div><div><b><font color="#000000">    ? 1 /* ELEMENT */ </font></b><b style="background-color: initial;"><font color="#000000">: isSuspense(type)</font></b></div><div><b><font color="#000000">    ? 128 /* SUSPENSE */ </font></b><b style="background-color: initial;"><font color="#000000">: isTeleport(type)</font></b></div><div><b><font color="#000000">    ? 64 /* TELEPORT */  </font></b><b style="background-color: initial;"><font color="#000000">: isObject(type)</font></b></div><div><b style="background-color: initial;"><font color="#000000">    ? 4 /* STATEFUL_COMPONENT */</font></b><b style="background-color: initial;"><font color="#000000">: isFunction(type)</font></b></div><div><b><font color="#000000">    ? 2 /* FUNCTIONAL_COMPONENT */ </font></b><b style="background-color: initial;"><font color="#000000">: 0</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">  const vnode = {</font></b></div><div><b><font color="#000000">    type,</font></b></div><div><b><font color="#000000">    props,</font></b></div><div><b><font color="#000000">    shapeFlag,</font></b></div><div><b><font color="#000000">    // 一些其他属性</font></b></div><div><b><font color="#000000">  }</font></b></div><div><b><font color="#000000">  // 标准化子节点，把不同数据类型的 children 转成数组或者文本类型</font></b></div><div><b><font color="#000000">  </font><font color="#cc0066">normalizeChildren</font><font color="#000000">(vnode, children)</font></b></div><div><b><font color="#000000">  return vnode</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">}</font></b></div><div><br /></div></div></div></div></foreignObject><text x="2032" y="1009" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">function createVNode(type, props = null,children = null) {...</text></switch></g><path d="M 2225 770 L 2224.57 808.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2224.51 813.88 L 2221.09 806.84 L 2224.57 808.63 L 2228.09 806.92 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2032.5" y="1250" width="387.5" height="240" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 386px; height: 1px; padding-top: 1370px; margin-left: 2035px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b style="background-color: initial;"><font color="#000000">const render = (vnode, container) =&gt; {</font></b></div><div><b><font color="#000000">  if (vnode == null) {</font></b></div><div><b><font color="#000000">   </font><font color="#0000ff"> // 销毁组件</font></b></div><div><b><font color="#000000">    if (container._vnode) {</font></b></div><div><b><font color="#000000">      </font><font color="#cc0066">unmount</font><font color="#000000">(container._vnode, null, null, true)</font></b></div><div><b><font color="#000000">    }</font></b></div><div><b><font color="#000000">  } else {</font></b></div><div><b><font color="#000000">  </font><font color="#0000ff">  // 创建或者更新组件</font></b></div><div><b><font color="#000000">    </font><font color="#cc0066">patch(container._vnode || null, vnode, container)</font></b></div><div><b><font color="#000000">  }</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">  // 缓存 vnode 节点，表示已经渲染</font></b></div><div><b><font color="#000000">  container._vnode = vnode</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">}</font></b></div><div><br /></div></div></div></div></foreignObject><text x="2035" y="1374" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const render = (vnode, container) =&gt; {...</text></switch></g><path d="M 2225 1197 L 2225.32 1240.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2225.36 1245.88 L 2221.81 1238.91 L 2225.32 1240.63 L 2228.81 1238.86 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1295" y="835" width="650" height="570" fill="#e1d5e7" stroke="#9673a6" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 648px; height: 1px; padding-top: 1120px; margin-left: 1297px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const patch = (n1, n2, container, anchor = null, parentComponent = null,...) =&gt; {</b></div><div><b>  <font color="#0000ff">// 如果存在新旧节点, 且新旧节点类型不同，则销毁旧节点</font></b></div><div><b>  if (n1 &amp;&amp; !<font color="#cc0066">isSameVNodeType</font>(n1, n2)) {</b></div><div><b>    anchor = getNextHostNode(n1)</b></div><div><b>    unmount(n1, parentComponent, parentSuspense, true)</b></div><div><b>    n1 = null</b></div><div><b>  }</b></div><div><b><br /></b></div><div><b>  const { type, shapeFlag } = n2</b></div><div><b>  switch (type) {</b></div><div><b>    case Text:</b></div><div><b>      break</b></div><div><b>    case Comment:</b></div><div><b>      break</b></div><div><b>    case Static:</b></div><div><b>      // 处理静态节点</b></div><div><b>      break</b></div><div><b>    case Fragment:</b></div><div><b>      // 处理 Fragment 元素</b></div><div><b>      break</b></div><div><b>    default:</b></div><div><b>      if (shapeFlag &amp; 1 /* ELEMENT */) {</b></div><div><b>        // 处理普通 DOM 元素</b></div><div><b>        <font color="#cc0066">processElement</font>(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized)</b></div><div><b>      }</b></div><div><b>      else if (shapeFlag &amp; 6 /* COMPONENT */) {</b></div><div><b>        // 处理组件</b></div><div><b>        <font color="#cc0066">processComponent</font>(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized)</b></div><div><b>      }</b></div><div><b>      else if (shapeFlag &amp; 64 /* TELEPORT */) {</b></div><div><b>        // 处理 TELEPORT</b></div><div><b>      }</b></div><div><b>      else if (shapeFlag &amp; 128 /* SUSPENSE */) {</b></div><div><b>        // 处理 SUSPENSE</b></div><div><b>      }</b></div><div><b>  }</b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="1297" y="1124" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const patch = (n1, n2, container, anchor = null, parentComponent = null,...) =&gt; {...</text></switch></g><path d="M 2030.83 1300.77 L 1951.37 1300.98" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1946.12 1301 L 1953.11 1297.48 L 1951.37 1300.98 L 1953.13 1304.48 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1957" y="1271" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1286px; margin-left: 1958px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><font color="#cc0000"><b>patch</b></font></div></div></div></foreignObject><text x="1987" y="1290" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">patch</text></switch></g><path d="M 1525 1735 L 1525 2033.63" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1525 2038.88 L 1521.5 2031.88 L 1525 2033.63 L 1528.5 2031.88 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all"/><rect x="1295" y="1535" width="460" height="200" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 458px; height: 1px; padding-top: 1635px; margin-left: 1297px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const <font color="#cc0066">processComponent</font> = (n1, n2, container, anchor, parentComponent, ...) =&gt; {</b></div><div><b>  if (n1 == null) {</b></div><div><b>   // 挂载组件</b></div><div><b>   <font color="#cc0066">mountComponent</font>(n2, container, anchor, parentComponent, ...)</b></div><div><b>  }</b></div><div><b>  else {</b></div><div><b>    // 更新组件</b></div><div><b>    <font color="#cc0066">updateComponent</font>(n1, n2, parentComponent, optimized)</b></div><div><b>  }</b></div><div><b>}</b></div></div></div></div></foreignObject><text x="1297" y="1639" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const processComponent = (n1, n2, container, anchor, parentComponent, ...) =...</text></switch></g><path d="M 1375.6 1408.42 L 1375.07 1528.65" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1375.04 1533.9 L 1371.58 1526.89 L 1375.07 1528.65 L 1378.58 1526.92 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1344" y="1456" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1471px; margin-left: 1345px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="color: rgb(0, 0, 0); text-align: left;"><font color="#cc0066">processComponent</font></b></div></div></div></foreignObject><text x="1374" y="1475" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">processCom...</text></switch></g><path d="M 1525 1975 L 1525 2033.63" fill="none" stroke="#00cc00" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1525 2038.88 L 1521.5 2031.88 L 1525 2033.63 L 1528.5 2031.88 Z" fill="#00cc00" stroke="#00cc00" stroke-miterlimit="10" pointer-events="all"/><rect x="1295" y="1785" width="460" height="190" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 458px; height: 1px; padding-top: 1880px; margin-left: 1297px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const <font color="#cc0066">mountComponent</font> = (initialVNode, container, anchor, parentComponent) =&gt; {</b></div><div><b>  // 创建组件实例</b></div><div><b>  const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense))</b></div><div><b>  // 设置组件实例</b></div><div><b>  <font color="#cc0066">setupComponent(instance)</font></b></div><div><b>  <font color="#0000ff">// 设置并运行带副作用的渲染函数</font></b></div><div><b>  <font color="#cc0066">setupRenderEffect</font>(instance, initialVNode, container, anchor)</b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="1297" y="1884" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const mountComponent = (initialVNode, container, anchor, parentComponent) =&gt;...</text></switch></g><path d="M 1375 1736 L 1375 1778.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1375 1783.88 L 1371.5 1776.88 L 1375 1778.63 L 1378.5 1776.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="635" y="1545" width="500" height="740" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 498px; height: 1px; padding-top: 1915px; margin-left: 637px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>const </b><font color="#cc0066" style="font-weight: bold;">setupRenderEffect</font><b> = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) =&gt; {</b><br /><br /><b>  // 创建响应式的副作用渲染函数</b><br /><b>  instance.update = effect(function componentEffect() {</b><br /><b>    if (!instance.isMounted) {</b><br /><b>      // 渲染组件生成子树 vnode</b><br /><b>      const </b><font color="#cc0066" style="font-weight: bold;">subTree</font><b> = (instance.subTree = renderComponentRoot(instance))</b><br /><br /><b>      // 把子树 vnode 挂载到 container 中</b><br /><b>      </b><font color="#cc0066" style="font-weight: bold;">patch(null, subTree, container, anchor, instance, parentSuspense, isSVG)</font><br /><b>      // 保留渲染生成的子树根 DOM 节点</b><br /><b>      initialVNode.el = subTree.el</b><br /><b>      instance.isMounted = true</b><br /><b>    }</b><br /><br /><b>    else {</b><br /><b>      // 更新组件<br /></b><div style=""><b>      let { next, vnode } = instance</b></div><div style=""><b>      // next 表示新的组件 vnode</b></div><div style=""><b>      if (next) {</b></div><div style=""><b>        // 更新组件 vnode 节点信息</b></div><div style=""><b>        <font color="#cc0066">updateComponentPreRender</font>(instance, next, optimized)</b></div><div style=""><b>      }</b></div><div style=""><b>      else {</b></div><div style=""><b>        next = vnode</b></div><div style=""><b>      }</b></div><div style=""><b>      // 渲染新的子树 vnode</b></div><div style=""><b>      const nextTree = <font color="#cc0066">renderComponentRoot</font>(instance)</b></div><div style=""><b>      // 缓存旧的子树 vnode</b></div><div style=""><b>      const prevTree = instance.subTree</b></div><div style=""><b>      // 更新子树 vnode</b></div><div style=""><b>      instance.subTree = nextTree</b></div><div style=""><b>      // 组件更新核心逻辑，根据新旧子树 vnode 做 patch</b></div><div style=""><b>      <font color="#cc0066">patch</font>(prevTree, nextTree,</b></div><div style=""><b>        // 如果在 teleport 组件中父节点可能已经改变，所以容器直接找旧树 DOM 元素的父节点</b></div><div style=""><b>        hostParentNode(prevTree.el),</b></div><div style=""><b>        // 参考节点在 fragment 的情况可能改变，所以直接找旧树 DOM 元素的下一个节点</b></div><div style=""><b>        getNextHostNode(prevTree),</b></div><div style=""><b>        instance,</b></div><div style=""><b>        parentSuspense,</b></div><div style=""><b>        isSVG)</b></div><div style=""><b>      // 缓存更新后的 DOM 节点</b></div><div style=""><b>      next.el = nextTree.el</b></div><b>    }</b><br /><br /><b>  }, prodEffectOptions)</b><br /><br /><b>}</b></div></div></div></foreignObject><text x="637" y="1919" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspens...</text></switch></g><path d="M 2425 1705 L 2445 1705 L 2445 1703.35" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2445 1708.6 L 2441.5 1701.6 L 2445 1703.35 L 2448.5 1701.6 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1785" y="1535" width="570" height="340" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 568px; height: 1px; padding-top: 1705px; margin-left: 1787px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const <font color="#cc0066">processElement</font> = (n1, n2, container, anchor, parentComponent, parentSuspense, ...) =&gt; {</b></div><div><b><br /></b></div><div><b>  isSVG = isSVG || n2.type === 'svg'</b></div><div><b><br /></b></div><div><b>  if (n1 == null) {</b></div><div><b><br /></b></div><div><b>    <font color="#0000ff">//挂载元素节点</font></b></div><div><b>   <font color="#cc0066"> mountElement</font>(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized)</b></div><div><b>  }</b></div><div><b><br /></b></div><div><b>  else {</b></div><div><b>    <font color="#0000ff">//更新元素节点</font></b></div><div><b>    <font color="#cc0066">patchElement</font>(n1, n2, parentComponent, parentSuspense, isSVG, optimized)</b></div><div><b>  }</b></div><div><b><br /></b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="1787" y="1709" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, ...) =&gt; {...</text></switch></g><path d="M 1885 1406 L 1885 1528.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1885 1533.88 L 1881.5 1526.88 L 1885 1528.63 L 1888.5 1526.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1855" y="1456" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1471px; margin-left: 1856px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="text-align: left;"><font color="#cc0000">processElement</font></b></div></div></div></foreignObject><text x="1885" y="1475" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">processEle...</text></switch></g><path d="M 760 1545 Q 1026 1547 1001 1522 Q 976 1497 1287.8 1197.94" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1291.59 1194.3 L 1288.96 1201.68 L 1287.8 1197.94 L 1284.12 1196.62 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1025" y="1405" width="110" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 1420px; margin-left: 1026px;"><div data-drawio-colors="color: #0000FF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b><font color="#cc0000">如果subtree是<span style="font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, Roboto, &quot;PingFang SC&quot;, miui, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);"><font style="font-size: 12px;">普通元素 vnode</font></span></font></b></div></div></div></foreignObject><text x="1080" y="1424" fill="#0000FF" font-family="Helvetica" font-size="12px" text-anchor="middle">如果subtree是普通元素 vnode</text></switch></g><path d="M 1025 1545 L 1292.62 1262.62" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1296.23 1258.81 L 1293.96 1266.3 L 1292.62 1262.62 L 1288.88 1261.48 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1366px; margin-left: 1205px;"><div data-drawio-colors="color: #CC0000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><b style="color: rgb(0, 0, 255); background-color: rgb(248, 249, 250);"><font color="#cc0000">如果subtree是组件<span style="font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, Roboto, &quot;PingFang SC&quot;, miui, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);">vnode</span></font></b></div></div></div></foreignObject><text x="1205" y="1369" fill="#CC0000" font-family="Helvetica" font-size="12px" text-anchor="middle">如果subtree是组件vnode</text></switch></g><rect x="1785" y="2003" width="570" height="470" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 568px; height: 1px; padding-top: 2238px; margin-left: 1787px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const <font color="#cc0066">mountElement</font> = (vnode, container, anchor, parentComponent, ) =&gt; {</b></div><div><b><br /></b></div><div><b>  let el</b></div><div><b>  const { type, props, shapeFlag } = vnode</b></div><div><b><br /></b></div><div><b>  // 创建 DOM 元素节点</b></div><div><b>  el = <font color="#cc0000">vnode.el</font> = <font color="#cc0066">hostCreateElement</font>(vnode.type, isSVG, props &amp;&amp; props.is)</b></div><div><b>  if (props) {</b></div><div><b>    // 处理 props，比如 class、style、event 等属性</b></div><div><b>    for (const key in props) {</b></div><div><b>      if (!isReservedProp(key)) {</b></div><div><b>        hostPatchProp(el, key, null, props[key], isSVG)</b></div><div><b>      }</b></div><div><b>    }</b></div><div><b>  }</b></div><div><b><br /></b></div><div><b>  if (shapeFlag &amp; 8 /* TEXT_CHILDREN */) {</b></div><div><b>    // 处理子节点是纯文本的情况</b></div><div><b>    hostSetElementText(el, vnode.children)</b></div><div><b>  }</b></div><div><b><br /></b></div><div><b>  else if (shapeFlag &amp; 16 /* ARRAY_CHILDREN */) {</b></div><div><b>    // 处理子节点是数组的情况</b></div><div><b>    mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG &amp;&amp; type !== 'foreignObject', optimized || !!<font color="#cc0000">vnode.dynamicChildren</font>)</b></div><div><b>  }</b></div><div><b>  <font color="#0000ff">// 把创建的 DOM 元素节点挂载到 container 上</font></b></div><div><b>  hostInsert(el, container, anchor)</b></div><div><b><br /></b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="1787" y="2242" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const mountElement = (vnode, container, anchor, parentComponent, ) =&gt; {...</text></switch></g><path d="M 2035.23 1874.66 L 2035.23 2000.89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2035.23 2006.14 L 2031.73 1999.14 L 2035.23 2000.89 L 2038.73 1999.14 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2015" y="1925" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1940px; margin-left: 2016px;"><div data-drawio-colors="color: #0000FF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="color: rgb(0, 0, 0); text-align: left;"><font color="#cc0066">mountElement</font> </b></div></div></div></foreignObject><text x="2045" y="1944" fill="#0000FF" font-family="Helvetica" font-size="12px" text-anchor="middle">mountEleme...</text></switch></g><rect x="2475" y="2005" width="290" height="160" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 288px; height: 1px; padding-top: 2085px; margin-left: 2477px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b><font color="#000000">function createElement(tag, isSVG, is) {</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">  isSVG ? document.createElementNS(svgNS, tag)</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">    : document.createElement(tag, is ? { is } : undefined)</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">}</font></b></div><div><br /></div></div></div></div></foreignObject><text x="2477" y="2089" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">function createElement(tag, isSVG, is) {...</text></switch></g><path d="M 2355 2078.92 L 2468.64 2075.21" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2473.88 2075.04 L 2467 2078.76 L 2468.64 2075.21 L 2466.77 2071.77 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2385" y="2055" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 2070px; margin-left: 2386px;"><div data-drawio-colors="color: #CC0000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, Roboto, &quot;PingFang SC&quot;, miui, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-align: justify;"><font style="font-size: 12px;"><b>hostCreateElement</b></font></span></div></div></div></foreignObject><text x="2415" y="2074" fill="#CC0000" font-family="Helvetica" font-size="12px" text-anchor="middle">hostCreate...</text></switch></g><rect x="2475" y="2215" width="290" height="100" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 288px; height: 1px; padding-top: 2265px; margin-left: 2477px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b><font color="#000000">function setElementText(el, text) {</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">  el.textContent = text</font></b></div><div><b><font color="#000000"><br /></font></b></div><div><b><font color="#000000">}</font></b></div><div><br /></div></div></div></div></foreignObject><text x="2477" y="2269" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">function setElementText(el, text) {...</text></switch></g><path d="M 2357 2254 L 2467.76 2253.81" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2473.01 2253.8 L 2466.02 2257.31 L 2467.76 2253.81 L 2466.01 2250.31 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2385" y="2235" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 2250px; margin-left: 2386px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="text-align: left;"><font color="#cc0000">hostSetElementText</font></b></div></div></div></foreignObject><text x="2415" y="2254" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">hostSetEle...</text></switch></g><rect x="2475" y="2355" width="440" height="200" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 438px; height: 1px; padding-top: 2455px; margin-left: 2477px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const mountChildren = (children, container, anchor, parentComponent,) =&gt; {</b></div><div><b>  for (let i = start; i &lt; children.length; i++) {</b></div><div><b>    // 预处理 child</b></div><div><b>    const child = (children[i] = optimized</b></div><div><b>      ? cloneIfMounted(children[i])</b></div><div><b>      : normalizeVNode(children[i]))</b></div><div><b>   <font color="#0000ff"> // 递归 patch 挂载 child</font></b></div><div><b>    <font color="#cc0066">patch</font>(null, child, container, anchor, parentComponent)</b></div><div><b>  }</b></div><div><b><br /></b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="2477" y="2459" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const mountChildren = (children, container, anchor, parentComponent,) =&gt;...</text></switch></g><path d="M 2357 2395 L 2468.63 2395" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2473.88 2395 L 2466.88 2398.5 L 2468.63 2395 L 2466.88 2391.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2385" y="2365" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 2380px; margin-left: 2386px;"><div data-drawio-colors="color: #CC0000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, Roboto, &quot;PingFang SC&quot;, miui, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-align: justify;"><font style="font-size: 12px;"><b style=""> mountChildren</b></font></span></div></div></div></foreignObject><text x="2415" y="2384" fill="#CC0000" font-family="Helvetica" font-size="12px" text-anchor="middle">mountChil...</text></switch></g><path d="M 2474.12 2469.8 L 1738.95 1405.57" fill="none" stroke="#7ea6e0" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6" pointer-events="stroke"/><rect x="2475" y="2575" width="440" height="170" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 438px; height: 1px; padding-top: 2660px; margin-left: 2477px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>function insert(child, parent, anchor) {</b></div><div><b>  if (anchor) {</b></div><div><b>    parent.insertBefore(child, anchor)</b></div><div><b>  }</b></div><div><b>  else {</b></div><div><b>    parent.appendChild(child)</b></div><div><b>  }</b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="2477" y="2664" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">function insert(child, parent, anchor) {...</text></switch></g><path d="M 2235 2475 L 2467.6 2639.66" fill="none" stroke="#7ea6e0" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2471.89 2642.69 L 2464.15 2641.51 L 2467.6 2639.66 L 2468.2 2635.79 Z" fill="#7ea6e0" stroke="#7ea6e0" stroke-miterlimit="10" pointer-events="all"/><rect x="2335" y="2555" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 2570px; margin-left: 2336px;"><div data-drawio-colors="color: #0000FF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="text-align: left;"><font color="#cc0000">hostInsert</font></b></div></div></div></foreignObject><text x="2365" y="2574" fill="#0000FF" font-family="Helvetica" font-size="12px" text-anchor="middle">hostInsert</text></switch></g><path d="M 1293.62 1844.85 L 1144.37 1843.29" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1139.12 1843.23 L 1146.15 1839.81 L 1144.37 1843.29 L 1146.08 1846.8 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1185" y="1825" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1840px; margin-left: 1186px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="text-align: left;"> <font color="#cc0066">setupRenderEffect</font></b></div></div></div></foreignObject><text x="1215" y="1844" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">setupRend...</text></switch></g><rect x="5" y="1555" width="430" height="280" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 428px; height: 1px; padding-top: 1695px; margin-left: 7px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const <font color="#cc0066">updateComponentPreRender</font> = (instance, nextVNode, optimized) =&gt; {</b></div><div><b>  // 新组件 vnode 的 component 属性指向组件实例</b></div><div><b>  nextVNode.component = instance</b></div><div><b>  // 旧组件 vnode 的 props 属性</b></div><div><b>  const prevProps = instance.vnode.props</b></div><div><b>  // 组件实例的 vnode 属性指向新的组件 vnode</b></div><div><b>  instance.vnode = nextVNode</b></div><div><b>  // 清空 next 属性，为了下一次重新渲染准备</b></div><div><b>  instance.next = null</b></div><div><b>  // 更新 props</b></div><div><b>  updateProps(instance, nextVNode.props, prevProps, optimized)</b></div><div><b>  // 更新 插槽</b></div><div><b>  updateSlots(instance, nextVNode.children)</b></div><div><b>}</b></div></div></div></div></foreignObject><text x="7" y="1699" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const updateComponentPreRender = (instance, nextVNode, optimized) =&gt; {...</text></switch></g><path d="M 632 1706.32 L 441.8 1706.47" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 436.55 1706.48 L 443.55 1702.97 L 441.8 1706.47 L 443.55 1709.97 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1695px; margin-left: 535px;"><div data-drawio-colors="color: #CC0066; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><b style="color: rgb(0, 0, 0); text-align: left; background-color: rgb(248, 249, 250);">更新组件 vnode 节点信息</b></div></div></div></foreignObject><text x="535" y="1699" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">更新组件 vnode 节点信息</text></switch></g><rect x="505" y="1705" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1720px; margin-left: 506px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="color: rgb(0, 0, 0); text-align: left;"><font color="#cc0066">updateComponentPreRender</font></b></div></div></div></foreignObject><text x="535" y="1724" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">updateComp...</text></switch></g><path d="M 1295 2177.5 L 1215 2177.5 L 1142.37 2177" fill="none" stroke="#00cc00" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1137.12 2176.97 L 1144.14 2173.52 L 1142.37 2177 L 1144.09 2180.52 Z" fill="#00cc00" stroke="#00cc00" stroke-miterlimit="10" pointer-events="all"/><rect x="1295" y="2040" width="460" height="275" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 458px; height: 1px; padding-top: 2178px; margin-left: 1297px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b><br /><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">const updateComponent = (n1, n2, parentComponent, optimized) =&gt; {<br />  const instance = (n2.component = n1.component)<br />  // 根据新旧子组件 vnode 判断是否需要更新子组件<br />  if (<font color="#cc0066">shouldUpdateComponent</font>(n1, n2, parentComponent, optimized)) {<br />    // 新的子组件 vnode 赋值给 instance.next<br />    instance.next = n2<br />    // 子组件也可能因为数据变化被添加到更新队列里了，移除它们防止对一个子组件重复更新<br />   <font color="#cc0066"><span> </span>invalidateJob(instance.update)</font><br />    // 执行子组件的副作用渲染函数<br />   <font color="#cc0066"><span> </span>instance.update()</font><br />  }<br />  else {<br />    // 不需要更新，只复制属性<br />    n2.component = n1.component<br />    n2.el = n1.el<br />  }<br />}</span><br /></b></div></div></div></foreignObject><text x="1297" y="2181" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const updateComponent = (n1, n2, parentComponent, optimized) =&gt; {...</text></switch></g><rect x="1315" y="1745" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1760px; margin-left: 1316px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="text-align: left;"><font color="#cc0000">挂载组件</font></b></div></div></div></foreignObject><text x="1345" y="1764" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">挂载组件</text></switch></g><rect x="1520" y="1740" width="70" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1755px; margin-left: 1555px;"><div data-drawio-colors="color: #CC0000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><b style="text-align: left;">更新组件</b></div></div></div></foreignObject><text x="1555" y="1759" fill="#CC0000" font-family="Helvetica" font-size="12px" text-anchor="middle">更新组件</text></switch></g><rect x="1185" y="2145" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 2160px; margin-left: 1186px;"><div data-drawio-colors="color: #CC0000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="color: rgb(0, 0, 0); text-align: left;"><font color="#cc0066"> instance.update()</font></b></div></div></div></foreignObject><text x="1215" y="2164" fill="#CC0000" font-family="Helvetica" font-size="12px" text-anchor="middle">instance....</text></switch></g><path d="M 2670 1565 L 2670 1535 L 2885 1535 L 2885 1511.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2885 1506.12 L 2888.5 1513.12 L 2885 1511.37 L 2881.5 1513.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="2445" y="1565" width="450" height="270" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1700px; margin-left: 2447px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><br /></div><div><b><br /></b></div><div><b>const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) =&gt; {</b></div><div><b>  const el = (n2.el = n1.el)</b></div><div><b style="background-color: initial;">  const oldProps = (n1 &amp;&amp; n1.props) || EMPTY_OBJ</b></div><div><b>  const newProps = n2.props || EMPTY_OBJ</b></div><div><b>  // 更新 props</b></div><div><b>  patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG)</b></div><div><b>  const areChildrenSVG = isSVG &amp;&amp; n2.type !== 'foreignObject'</b></div><div><b>  // 更新子节点</b></div><div><b style="background-color: initial;">  patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG)</b><br /></div><div><b><br /></b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="2447" y="1704" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optim...</text></switch></g><rect x="2365" y="1690" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1705px; margin-left: 2366px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="color: rgb(0, 0, 0); text-align: left;"> <font color="#cc0066">patchElement</font></b></div></div></div></foreignObject><text x="2395" y="1709" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">patchElem...</text></switch></g><path d="M 2355 1705 L 2365 1705 L 2365 1706.08" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 3170 1840 L 3170 1845 L 2935 1845 L 2935 2505 L 2921.37 2505" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2916.12 2505 L 2923.12 2501.5 L 2921.37 2505 L 2923.12 2508.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="2925" y="1170" width="490" height="670" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 488px; height: 1px; padding-top: 1505px; margin-left: 2927px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><b>const patchChildren = (n1, n2, container, anchor, parentComponent, ... ) =&gt; {</b></div><div><b>  const c1 = n1 &amp;&amp; n1.children</b></div><div><b>  const prevShapeFlag = n1 ? n1.shapeFlag : 0</b></div><div><b>  const c2 = n2.children</b></div><div><b>  const { shapeFlag } = n2</b></div><div><b>  // 子节点有 3 种可能情况：文本、数组、空</b></div><div><b>  if (shapeFlag &amp; 8 /* TEXT_CHILDREN */) {</b></div><div><b>    if (prevShapeFlag &amp; 16 /* ARRAY_CHILDREN */) {</b></div><div><b>      // 数组 -&gt; 文本，则删除之前的子节点</b></div><div><b>      unmountChildren(c1, parentComponent, parentSuspense)</b></div><div><b>    }</b></div><div><b>    if (c2 !== c1) {</b></div><div><b>      // 文本对比不同，则替换为新文本</b></div><div><b>      hostSetElementText(container, c2)</b></div><div><b>    }</b></div><div><b>  }</b></div><div><b>  else {</b></div><div><b>    if (prevShapeFlag &amp; 16 /* ARRAY_CHILDREN */) {</b></div><div><b>      // 之前的子节点是数组</b></div><div><b>      if (shapeFlag &amp; 16 /* ARRAY_CHILDREN */) {</b></div><div><b>        // 新的子节点仍然是数组，则做完整地 diff</b></div><div><b>        patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized)</b></div><div><b>      }</b></div><div><b>      else {</b></div><div><b>        // 数组 -&gt; 空，则仅仅删除之前的子节点</b></div><div><b>        unmountChildren(c1, parentComponent, parentSuspense, true)</b></div><div><b>      }</b></div><div><b>    }</b></div><div><b>    else {</b></div><div><b>      // 之前的子节点是文本节点或者为空</b></div><div><b>      // 新的子节点是数组或者为空</b></div><div><b>      if (prevShapeFlag &amp; 8 /* TEXT_CHILDREN */) {</b></div><div><b>        // 如果之前子节点是文本，则把它清空</b></div><div><b>        hostSetElementText(container, '')</b></div><div><b>      }</b></div><div><b>      if (shapeFlag &amp; 16 /* ARRAY_CHILDREN */) {</b></div><div><b>        // 如果新的子节点是数组，则挂载新子节点</b></div><div><b>        mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized)</b></div><div><b>      }</b></div><div><b>    }</b></div><div><b>  }</b></div><div><b>}</b></div><div><br /></div></div></div></div></foreignObject><text x="2927" y="1509" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">const patchChildren = (n1, n2, container, anchor, parentComponent, ... ) =&gt; {...</text></switch></g><rect x="2855" y="1475" width="60" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1490px; margin-left: 2856px;"><div data-drawio-colors="color: #CC0066; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 102); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b style="text-align: left; background-color: initial;"><font color="#cc0000">patchChildren</font></b></div></div></div></foreignObject><text x="2885" y="1494" fill="#CC0066" font-family="Helvetica" font-size="12px" text-anchor="middle">patchChild...</text></switch></g><rect x="2570" y="1505" width="160" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1520px; margin-left: 2650px;"><div data-drawio-colors="color: #CC0000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(204, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px;"><span style="color: #dcdcaa;">patchBlockChildren</span></div></div></div></div></foreignObject><text x="2650" y="1524" fill="#CC0000" font-family="Helvetica" font-size="12px" text-anchor="middle">patchBlockChildren</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>